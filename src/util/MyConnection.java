package util;

import myexception.FreeConnectionException;
import readproperties.ReadConfig;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

public class MyConnection extends AbstractConnection {

    private int index;
    private static Connection conn;

    static{
        try {
            Class.forName(ReadConfig.getInstance().getDriver());
            conn = ReadConfig.getInstance().getURLConnection();

        } catch (ClassNotFoundException e){
            e.printStackTrace();
        } catch (SQLException e){
            e.printStackTrace();
        }
    }

    public MyConnection(){}
    public MyConnection(int index){
        this.index = index;
    }

    public Statement createStatement() throws SQLException {
        return conn.createStatement();
    }

    public PreparedStatement prepareStatement(String sql) throws SQLException {
        return conn.prepareStatement(sql);
    }

    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {
        return conn.prepareStatement(sql, autoGeneratedKeys);
    }

    public void close(){
        try {
            ConnectionPool.freeConnection(this);
        } catch (FreeConnectionException e) {
            e.printStackTrace();
        }
    }
}
